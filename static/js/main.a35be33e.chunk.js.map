{"version":3,"sources":["state-manager/actions.js","state-manager/reducer.js","state-manager/context.js","components/ListCharacters/ListCharacters.js","components/AddCharacter/components/Initiative/Initiative.js","components/AddCharacter/components/HitPoints/HitPoints.js","components/AddCharacter/components/Name/Name.js","components/AddCharacter/AddCharacter.js","components/Settings/Settings.js","components/EditCharacter/EditCharacter.js","App.js","index.js"],"names":["ADD_INITIATIVE","DELETE_ALL","LOAD_STATE","SET_INITIATIVES","REMOVE_CHARACTER","WRITE_INPUT_INITIATIVE","WRITE_INPUT_NAME","WRITE_INPUT_HP","DELETE_INPUT_INITIATIVE","DELETE_INPUT_NAME","DELETE_INPUT_HP","NEGATIVE_INPUT_INITIATIVE","NEXT","BACK","SELECT","EDIT_HP","EDIT_CONDITION","REMOVE_CONDITION","STORED_STATE","initialState","initiatives","selected","inputInitiative","inputName","inputHitpoints","time","rounds","firstTurn","reducer","state","action","type","character","value","name","hitpoints","id","Date","now","monster","conditions","sort","a","b","filter","parseInt","slice","concat","find","map","ini","copy","cloneDeep","push","cond","condition","Error","init","string_state","localStorage","getItem","JSON","parse","error","console","StateContext","createContext","ContextWrapper","children","store","useReducer","useEffect","isEqual","setItem","stringify","Provider","useStateValue","useContext","Text","Typography","confirm","Modal","DragHandle","sortableHandle","MenuOutlined","style","width","cursor","color","SortableItem","sortableElement","props","SortableContainer","sortableContainer","getTime","count","date","setSeconds","toISOString","substr","ListCharacters","wider","dispatch","columns","useMemo","fields","dataIndex","className","render","title","fontWeight","key","tags","display","flexDirection","DeleteOutlined","onClick","icon","onOk","onSortEnd","oldIndex","newIndex","newInitiatives","arrayMove","el","height","overflowX","justifyContent","borderRight","overflow","pagination","dataSource","rowKey","rowSelection","onChange","components","body","wrapper","useDragHandle","helperClass","row","restProps","index","findIndex","x","span","size","maxWidth","disabled","length","keyboard","Title","buttons","Icon","LineOutlined","Keyboard","danger","undefined","minWidth","Initiative","gutter","justify","margin","level","HitPoints","buttonLetters","extraWords","Name","queryString","window","location","search","urlParams","URLSearchParams","players_param","get","players","split","ply","Step","Steps","steps","AddCharacter","useState","current","setCurrent","item","RollbackOutlined","saveState","states","getStates","states_str","Settings","stateSelected","setstateSelected","setName","setStates","placeholder","target","stateToBeSaved","setTimeout","SaveOutlined","toDateString","newStates","buttonsHitpoints","buttonsConditions","add","remove","KeyboardConditions","hasIt","KeyboardHitpoints","isNegative","EditCharacter","checked","TabPane","Tabs","App","activeTab","setTab","padding","activeKey","tab","SettingOutlined","AppWrapped","ReactDOM","document","getElementById"],"mappings":"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lB,CAAEpI,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,OAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,KAAMzB,GACpB,CAAE2B,MAAO,IAAKF,K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","file":"static/js/main.a35be33e.chunk.js","sourcesContent":["export const ADD_INITIATIVE = \"ADD_INITIATIVE\";\r\nexport const DELETE_ALL = \"DELETE_ALL\";\r\nexport const LOAD_STATE = \"LOAD_STATE\";\r\nexport const SET_INITIATIVES = \"SET_INITIATIVES\";\r\nexport const REMOVE_CHARACTER = \"REMOVE_CHARACTER\";\r\nexport const WRITE_INPUT_INITIATIVE = \"WRITE_INPUT_INITIATIVE\";\r\nexport const WRITE_INPUT_NAME = \"WRITE_INPUT_NAME\";\r\nexport const WRITE_INPUT_HP = \"WRITE_INPUT_HP\";\r\nexport const DELETE_INPUT_INITIATIVE = \"DELETE_INPUT_INITIATIVE\";\r\nexport const DELETE_INPUT_NAME = \"DELETE_INPUT_NAME\";\r\nexport const DELETE_INPUT_HP = \"DELETE_INPUT_HP\";\r\nexport const NEGATIVE_INPUT_INITIATIVE = \"NEGATIVE_INPUT_INITIATIVE\";\r\nexport const NEXT = \"NEXT\";\r\nexport const BACK = \"BACK\";\r\nexport const SELECT = \"SELECT\";\r\nexport const EDIT_HP = \"EDIT_HP\";\r\nexport const EDIT_CONDITION = \"EDIT_CONDITION\";\r\nexport const REMOVE_CONDITION = \"REMOVE_CONDITION\";\r\n","import cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport {\r\n    ADD_INITIATIVE,\r\n    DELETE_ALL,\r\n    LOAD_STATE,\r\n    SET_INITIATIVES,\r\n    REMOVE_CHARACTER,\r\n    WRITE_INPUT_INITIATIVE,\r\n    WRITE_INPUT_NAME,\r\n    WRITE_INPUT_HP,\r\n    DELETE_INPUT_INITIATIVE,\r\n    DELETE_INPUT_NAME,\r\n    DELETE_INPUT_HP,\r\n    NEGATIVE_INPUT_INITIATIVE,\r\n    NEXT,\r\n    BACK,\r\n    SELECT,\r\n    EDIT_HP,\r\n    EDIT_CONDITION,\r\n    REMOVE_CONDITION\r\n} from './actions';\r\n\r\nexport const STORED_STATE = \"storedState\";\r\n\r\nexport const initialState = {\r\n    initiatives: [],\r\n    selected: null,\r\n    inputInitiative: 0,\r\n    inputName: '',\r\n    inputHitpoints: 0,\r\n    time: 0,\r\n    rounds: 0,\r\n    firstTurn: null,\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_INITIATIVE: {\r\n            const character = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName ?? '',\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster,\r\n                conditions: []\r\n            };\r\n            const initiatives = [...state.initiatives, character].sort((a, b) => b.value - a.value);\r\n            const firstTurn = initiatives[0].id;\r\n            return { \r\n                ...state,\r\n                firstTurn,\r\n                initiatives,\r\n                inputInitiative: 0,\r\n                inputName: '',\r\n                inputHitpoints: 0\r\n            };\r\n        }\r\n        case DELETE_ALL: {\r\n            return initialState;\r\n        }\r\n        case LOAD_STATE: {\r\n            return action.value;\r\n        }\r\n        case SET_INITIATIVES: {\r\n            const firstTurn = action.initiatives[0].id;\r\n            return { ...state, initiatives: action.initiatives, firstTurn };\r\n        }\r\n        case REMOVE_CHARACTER: {\r\n            const initiatives = state.initiatives.filter(({ id }) => id !== action.value);\r\n            const selected = state.selected === action.value ? null : state.selected\r\n            const firstTurn = initiatives[0].id;\r\n            return { ...state,\r\n                initiatives,\r\n                selected,\r\n                firstTurn\r\n            };\r\n        }\r\n        case WRITE_INPUT_INITIATIVE: {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case WRITE_INPUT_NAME: {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case WRITE_INPUT_HP: {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case DELETE_INPUT_INITIATIVE: {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case DELETE_INPUT_HP: {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case DELETE_INPUT_NAME: {\r\n            return { ...state, inputName: state?.inputName?.slice(0, -1) ?? '' };\r\n        }\r\n        case NEGATIVE_INPUT_INITIATIVE: {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case NEXT: {\r\n            const { firstTurn } = state;\r\n            let time = state.time;\r\n            let rounds = state.rounds;\r\n\r\n            const initiatives = state.initiatives.slice(1).concat(state.initiatives.slice(0, 1));\r\n\r\n            if (firstTurn === initiatives[0].id) {\r\n                rounds += 1;\r\n                time += 6;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                initiatives,\r\n                time,\r\n                rounds\r\n            };\r\n        }\r\n        case BACK: {\r\n            const initiatives = state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1));\r\n            return {\r\n                ...state,\r\n                initiatives\r\n            };\r\n        }\r\n        case SELECT: {\r\n            const character = state.initiatives.find(({ id }) => id === action.value);\r\n            return {\r\n                ...state,\r\n                selected: character.id,\r\n                inputInitiative: character?.value,\r\n                inputName: character?.name,\r\n                inputHitpoints: character?.hitpoints\r\n            };\r\n        }\r\n        case EDIT_HP: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.hitpoints = copy.hitpoints + action.value;\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case EDIT_CONDITION: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions.push(action.value);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case REMOVE_CONDITION: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions = copy.conditions.filter(cond => cond.condition !== action.value.condition);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        default:\r\n            throw new Error(`Unknow action ${action.type}`);\r\n    }\r\n};\r\n\r\nexport const init = () => {\r\n    let state = initialState;\r\n    try {\r\n        const string_state = localStorage.getItem(STORED_STATE);\r\n        state = string_state ? JSON.parse(string_state) : initialState;\r\n        state.selected = null;\r\n    } catch (error) {\r\n        console.error(\"Error on init reducer\", error);\r\n        state = initialState;\r\n    }\r\n    return state;\r\n};","import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { reducer, initialState, init, STORED_STATE } from './reducer';\r\n\r\nconst StateContext = createContext();\r\n\r\nexport const ContextWrapper = ({ children }) => {\r\n    const store = useReducer(reducer, initialState, init);\r\n\r\n    useEffect(() => {\r\n        // Persist state on local storage.\r\n        const [ state ] = store;\r\n        if(!isEqual(state, initialState)){\r\n            localStorage.setItem(STORED_STATE, JSON.stringify(state));\r\n        }\r\n    }, [store]);\r\n\r\n    return (\r\n        <StateContext.Provider value={store}>\r\n            { children }\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useMemo} from 'react';\r\nimport { Table, Tag, Modal, Row, Col, Button, Typography } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\r\nimport { DeleteOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { BACK, NEXT, REMOVE_CHARACTER, SELECT, SET_INITIATIVES } from '../../state-manager/actions';\r\n\r\nconst { Text } = Typography;\r\nconst { confirm } = Modal;\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ width: '15px' ,cursor: 'pointer', color: '#999' }} />\r\n));\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\nconst getTime = (count = 0) => {\r\n    var date = new Date(null);\r\n    date.setSeconds(count);\r\n    return date.toISOString().substr(11, 8);\r\n};\r\n\r\nconst ListCharacters = ({ wider }) => {\r\n    const [{ initiatives, rounds, time }, dispatch] = useStateValue();\r\n\r\n    const columns = useMemo(() => {\r\n        const fields = [\r\n            {\r\n                dataIndex: 'sort',\r\n                width: 15,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                width: '50px',\r\n                className: 'drag-visible',\r\n                render: ({name, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: monster ? 'red' : 'green'  }}>{name}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Init',\r\n                key: 'value',\r\n                dataIndex: 'value',\r\n            }\r\n        ];\r\n\r\n        if(wider){\r\n            fields.push({\r\n                title: 'HP',\r\n                render: ({hitpoints, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: hitpoints > 0 || !monster ? 'green' : 'red'}}>{hitpoints}</span>\r\n                )\r\n            });\r\n            fields.push({\r\n                title: 'Conditions',\r\n                dataIndex: 'conditions',\r\n                key: 'conditions',\r\n                render: tags => (\r\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n                      {tags.map( ({color, condition}) => (\r\n                          <Tag color={color} key={condition}>\r\n                            {condition}\r\n                          </Tag>\r\n                        ))}\r\n                    </div>\r\n                  ),\r\n            });\r\n            fields.push({\r\n                key: 'id',\r\n                render: ({id, name}) => (\r\n                  <DeleteOutlined onClick={() => {\r\n                    confirm({\r\n                        title: `Do you Want to delete ${name ?? ''}?`,\r\n                        icon: null,\r\n                        onOk() {\r\n                            dispatch({ type: REMOVE_CHARACTER, value: id});\r\n                        },\r\n                      });\r\n                    }} />\r\n                ),\r\n              });\r\n        }\r\n        return fields;\r\n    }, [wider, dispatch]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newInitiatives = arrayMove([].concat(initiatives), oldIndex, newIndex).filter(el => !!el);\r\n            dispatch({ type: SET_INITIATIVES, initiatives: newInitiatives });\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = initiatives.findIndex(x => x.id === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div style={{ \r\n                height: '100vh',\r\n                overflowX: 'hidden',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                borderRight: 'solid 2px lightgrey'\r\n            }} >\r\n            <Table\r\n                style={{ height: 'calc(100vh - 35px)', overflow: 'scroll', overflowX: 'hidden' }}\r\n                pagination={false}\r\n                dataSource={initiatives}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                    type: 'radio',\r\n                    onChange: ([id]) => dispatch({ type: SELECT, value: id }),\r\n                }}\r\n                components={{\r\n                    body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n            <Row style={{ height: '40px' }} >\r\n                <Col span={6}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        title=\"Previous turn\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: BACK })} >\r\n                        Back\r\n                     </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Text keyboard>Rounds: {rounds}</Text>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Text keyboard>Time: {getTime(time)}</Text>\r\n                </Col>\r\n                <Col span={6} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        title=\"Next turn\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: NEXT })} >\r\n                        Next\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListCharacters;\r\n","import { LineOutlined } from '@ant-design/icons';\r\nimport { Button, Row, Col, Typography } from 'antd';\r\n\r\nimport { useStateValue } from '../../../../state-manager/context';\r\nimport {\r\n    NEGATIVE_INPUT_INITIATIVE,\r\n    WRITE_INPUT_INITIATIVE\r\n} from '../../../../state-manager/actions';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"2\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"3\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"4\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"5\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"6\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"7\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"8\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"9\", type: WRITE_INPUT_INITIATIVE },\r\n    { Icon: LineOutlined, type: NEGATIVE_INPUT_INITIATIVE },\r\n    { value: \"0\", type: WRITE_INPUT_INITIATIVE },\r\n];\r\n\r\n\r\nfunction Keyboard() {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttons.map(({ type, value, Icon, danger }) => {\r\n                return (\r\n                    <Col span={8} key={type + value}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            title={value ?? undefined}\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function Initiative() {\r\n    const [{ inputInitiative }] = useStateValue();\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Title style={{ margin: 10 }} level={3}>Initiative: {inputInitiative}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard />\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n","import { Button, Row, Col, Typography } from 'antd';\r\n\r\nimport { useStateValue } from '../../../../state-manager/context';\r\nimport { WRITE_INPUT_HP } from '../../../../state-manager/actions';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: WRITE_INPUT_HP },\r\n    { value: \"2\", type: WRITE_INPUT_HP },\r\n    { value: \"3\", type: WRITE_INPUT_HP },\r\n    { value: \"4\", type: WRITE_INPUT_HP },\r\n    { value: \"5\", type: WRITE_INPUT_HP },\r\n    { value: \"6\", type: WRITE_INPUT_HP },\r\n    { value: \"7\", type: WRITE_INPUT_HP },\r\n    { value: \"8\", type: WRITE_INPUT_HP },\r\n    { value: \"9\", type: WRITE_INPUT_HP },\r\n    {},\r\n    { value: \"0\", type: WRITE_INPUT_HP },\r\n];\r\n\r\n\r\nfunction Keyboard() {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttons.map(({ type, value, Icon, danger }) => {\r\n                if (!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            title={value ?? undefined}\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function HitPoints() {\r\n    const [{ inputHitpoints }] = useStateValue();\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Title style={{ margin: 10 }} level={3}>HP: {inputHitpoints}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard />\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n","import { Button, Row, Col, Typography } from 'antd';\r\n\r\nimport { useStateValue } from '../../../../state-manager/context';\r\nimport { WRITE_INPUT_NAME } from '../../../../state-manager/actions';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst buttonLetters = [\r\n    { value: \"q\", type: WRITE_INPUT_NAME },\r\n    { value: \"w\", type: WRITE_INPUT_NAME },\r\n    { value: \"e\", type: WRITE_INPUT_NAME },\r\n    { value: \"r\", type: WRITE_INPUT_NAME },\r\n    { value: \"t\", type: WRITE_INPUT_NAME },\r\n    { value: \"y\", type: WRITE_INPUT_NAME },\r\n    { value: \"u\", type: WRITE_INPUT_NAME },\r\n    { value: \"i\", type: WRITE_INPUT_NAME },\r\n    { value: \"o\", type: WRITE_INPUT_NAME },\r\n    { value: \"p\", type: WRITE_INPUT_NAME },\r\n    { value: \"a\", type: WRITE_INPUT_NAME },\r\n    { value: \"s\", type: WRITE_INPUT_NAME },\r\n    { value: \"d\", type: WRITE_INPUT_NAME },\r\n    { value: \"f\", type: WRITE_INPUT_NAME },\r\n    { value: \"g\", type: WRITE_INPUT_NAME },\r\n    { value: \"h\", type: WRITE_INPUT_NAME },\r\n    { value: \"j\", type: WRITE_INPUT_NAME },\r\n    { value: \"k\", type: WRITE_INPUT_NAME },\r\n    { value: \"l\", type: WRITE_INPUT_NAME },\r\n    { value: \"ñ\", type: WRITE_INPUT_NAME },\r\n    { value: \"z\", type: WRITE_INPUT_NAME },\r\n    { value: \"x\", type: WRITE_INPUT_NAME },\r\n    { value: \"c\", type: WRITE_INPUT_NAME },\r\n    { value: \"v\", type: WRITE_INPUT_NAME },\r\n    { value: \"b\", type: WRITE_INPUT_NAME },\r\n    { value: \"n\", type: WRITE_INPUT_NAME },\r\n    { value: \"m\", type: WRITE_INPUT_NAME },\r\n    { value: \"_\", type: WRITE_INPUT_NAME },\r\n    { value: \"?\", type: WRITE_INPUT_NAME },\r\n    { value: \"1\", type: WRITE_INPUT_NAME },\r\n    { value: \"2\", type: WRITE_INPUT_NAME },\r\n    { value: \"3\", type: WRITE_INPUT_NAME },\r\n    { value: \"4\", type: WRITE_INPUT_NAME },\r\n    { value: \"5\", type: WRITE_INPUT_NAME },\r\n    { value: \"6\", type: WRITE_INPUT_NAME },\r\n    { value: \"7\", type: WRITE_INPUT_NAME },\r\n    { value: \"8\", type: WRITE_INPUT_NAME },\r\n    { value: \"9\", type: WRITE_INPUT_NAME },\r\n    { value: \"0\", type: WRITE_INPUT_NAME },\r\n];\r\n\r\nfunction Keyboard({ extraWords }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonLetters.concat(extraWords).map(({ type, value, Icon }) => {\r\n                return (\r\n                    <Col key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            title={value ?? undefined}\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Name = () => {\r\n    const [{ inputName }] = useStateValue();\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const players_param = urlParams.get('players') ? urlParams.get('players') : null;\r\n    const players = players_param?.split(\"-\")?.map(ply => ({ value: ply, type: WRITE_INPUT_NAME })) ?? [];\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Title style={{ margin: 10 }} level={3}>Name: {inputName}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard extraWords={players} />\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Name;\r\n","import { useState } from 'react';\r\nimport { Button, Steps } from 'antd';\r\nimport { DeleteOutlined, RollbackOutlined } from '@ant-design/icons';\r\n\r\nimport Initiative from './components/Initiative/Initiative';\r\nimport HitPoints from './components/HitPoints/HitPoints';\r\nimport Name from './components/Name/Name';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport {\r\n    ADD_INITIATIVE,\r\n    DELETE_INPUT_HP,\r\n    DELETE_INPUT_INITIATIVE,\r\n    DELETE_INPUT_NAME\r\n} from '../../state-manager/actions';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\nexport default function AddCharacter() {\r\n    const [, dispatch] = useStateValue();\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <>\r\n            <Steps current={current}>\r\n                {steps.map(item => (\r\n                    <Step key={item.title} title={item.title} />\r\n                ))}\r\n            </Steps>\r\n            {\r\n                current === 1 && <Initiative />\r\n            }\r\n            {\r\n                current === 0 && <Name />\r\n            }\r\n            {\r\n                current === 2 && <HitPoints />\r\n            }\r\n            <div className=\"steps-action\">\r\n                {\r\n                    current === 0 &&\r\n                    <Button\r\n                        danger\r\n                        title=\"Delete last letter\"\r\n                        style={{ width: '100px' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_NAME })} >\r\n                        <RollbackOutlined />\r\n                    </Button>\r\n                }\r\n                {\r\n                    current === 1 &&\r\n                    <Button\r\n                        danger\r\n                        title=\"Delete initiative\"\r\n                        style={{ width: '100px' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_INITIATIVE })} >\r\n                        <DeleteOutlined />\r\n                    </Button>\r\n                }\r\n                {\r\n                    current === 2 &&\r\n                    <Button\r\n                        danger\r\n                        title=\"Delete HP\"\r\n                        style={{ width: '100px' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_HP })} >\r\n                        <DeleteOutlined />\r\n                    </Button>\r\n                }\r\n\r\n                {current > 0 && (\r\n                    <Button title=\"Previous Character Options\" onClick={() => setCurrent(current - 1)}>\r\n                        Previous\r\n                    </Button>\r\n                )}\r\n                {current < steps.length - 1 && (\r\n                    <Button title=\"Next Character Options\" type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                        Next\r\n                    </Button>\r\n                )}\r\n\r\n                {current === steps.length - 1 && (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        title=\"Add character as a Monster/NPC\"\r\n                        danger\r\n                        onClick={() => { setCurrent(0); dispatch({ type: ADD_INITIATIVE, monster: true }) }}>\r\n                        Add as a Monster\r\n                    </Button>\r\n                )}\r\n                {current === steps.length - 1 && (\r\n                    <Button\r\n                        type=\"primary\"\r\n                        title=\"Add character as a Player\"\r\n                        onClick={() => { setCurrent(0); dispatch({ type: ADD_INITIATIVE, monster: false }) }}>\r\n                        Add as a Player\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Modal, Input, Table } from 'antd';\r\nimport { DeleteOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { DELETE_ALL, LOAD_STATE } from '../../state-manager/actions';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst saveState = (states) => {\r\n    localStorage.setItem(\"states\", JSON.stringify(states))\r\n}\r\n\r\nconst getStates = () => {\r\n    let states = []\r\n    try {\r\n        const states_str = localStorage.getItem(\"states\");\r\n        states = states_str ? JSON.parse(states_str) : [];\r\n    } catch (error) {\r\n        console.error(\"Error on getStates from settings\", error);\r\n    }\r\n    return states;\r\n}\r\n\r\nexport default function Settings() {\r\n    const [ state, dispatch ] = useStateValue();\r\n    const [stateSelected, setstateSelected] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [states, setStates] = useState(getStates());\r\n\r\n    return (<>\r\n        <Row gutter={[8, 8]}>\r\n            <Col>\r\n                <Button\r\n                    size=\"large\"\r\n                    danger\r\n                    type=\"primary\" onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to delete everything in the store?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: DELETE_ALL });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <DeleteOutlined /> Delete Store\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Row gutter={[8, 8]}>\r\n            <Col span={14}>\r\n                <Input size=\"large\" placeholder=\"name\" value={name} onChange={ ({target: {value}}) => setName(value)} />\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!name}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to save the actual character set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                const stateToBeSaved = {\r\n                                    name,\r\n                                    id: Date.now(),\r\n                                    state\r\n                                }\r\n                                states.push(stateToBeSaved);\r\n                                setName(null);\r\n                                saveState(states);\r\n                                setTimeout(() => setStates(getStates()), 0);\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <SaveOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!stateSelected}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to activate this fight set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: LOAD_STATE, value: stateSelected });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    Activate\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Table\r\n            style={{ overflow: 'scroll', overflowX: 'hidden' }}\r\n            pagination={false}\r\n            dataSource={states} // states stored in localstorage\r\n            columns={[\r\n                {\r\n                    title: 'Creation Date',\r\n                    key: 'id',\r\n                    dataIndex: 'id',\r\n                    render: id => <span>{(new Date(id)).toDateString()}</span>\r\n                },\r\n                {\r\n                    title: 'Fight',\r\n                    key: 'name',\r\n                    dataIndex: 'name',\r\n                },\r\n                {\r\n                    render: ({ id, name }) => (\r\n                        <DeleteOutlined onClick={() => {\r\n                            confirm({\r\n                                title: `Do you Want to delete ${name ?? ''}?`,\r\n                                icon: null,\r\n                                onOk() {\r\n                                    const newStates = states?.filter( state => id !== state.id);\r\n                                    saveState(newStates);\r\n                                    setTimeout(() => setStates(getStates()), 0);\r\n                                },\r\n                            });\r\n                        }} />\r\n                    )\r\n                }\r\n            ]}\r\n            rowKey=\"state\"\r\n            rowSelection={{\r\n                type: 'radio',\r\n                onChange: ([state]) => setstateSelected(state),\r\n            }}\r\n        />\r\n    </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Checkbox, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { EDIT_CONDITION, EDIT_HP, REMOVE_CONDITION } from '../../state-manager/actions';\r\n\r\nconst buttonsHitpoints = [\r\n    { value: 1, type: EDIT_HP },\r\n    { value: 2, type: EDIT_HP },\r\n    { value: 3, type: EDIT_HP },\r\n    { value: 5, type: EDIT_HP },\r\n    { value: 10, type: EDIT_HP },\r\n    { value: 20, type: EDIT_HP },\r\n    { value: 30, type: EDIT_HP },\r\n    { value: 50, type: EDIT_HP }\r\n];\r\n\r\nconst buttonsConditions = [\r\n    { color: \"grey\", condition: \"Petrified\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"lime\", condition: \"Incapacitated\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"gold\", condition: \"Unconscious\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"orange\", condition: \"Paralyzed\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"cornflowerblue\", condition: \"Invisible\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"cyan\", condition: \"Deafened\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"geekblue\", condition: \"Blinded\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"blue\", condition: \"Frightened\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"purple\", condition: \"Grappled\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"burlywood\", condition: \"Restrained\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"magenta\", condition: \"Charmed\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"green\", condition: \"Poisoned\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"red\", condition: \"Stunned\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"volcano\", condition: \"Prone\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n];\r\n\r\nfunction KeyboardConditions({ conditions }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonsConditions.map(({ add, remove, condition, color }) => {\r\n                const hasIt = conditions?.find(cond => cond.condition === condition);\r\n                return (\r\n                    <Col span={6} key={condition}>\r\n                        <Tag\r\n                            key={condition}\r\n                            color={'cornflowerblue'}\r\n                            onClick={() => dispatch({ type: hasIt ? remove : add, value: { condition, color } })}\r\n                        >\r\n                            {hasIt && <DeleteOutlined />} {condition}\r\n                        </Tag>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction KeyboardHitpoints({ isNegative }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonsHitpoints.map(({ type, value, Icon }) => {\r\n                if (!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value : value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function EditCharacter() {\r\n    const [{ initiatives, selected }] = useStateValue();\r\n    const [checked, onChange] = useState(true);\r\n    const { conditions, name } = initiatives?.find(ini => ini.id === selected) ?? {};\r\n\r\n    return (\r\n        <>\r\n            <div className=\"LabelName\"><span className=\"Name\">{name}</span></div>\r\n            <div className=\"LabelName\">Hit Points:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <Col span={8} ><Checkbox checked={checked} onChange={({ target: { checked: value } }) => onChange(value)}>Minus</Checkbox></Col>\r\n                        <KeyboardHitpoints isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"LabelName\">Conditions:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <KeyboardConditions conditions={conditions} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Tabs } from 'antd';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport ListCharacters from './components/ListCharacters/ListCharacters';\r\nimport AddCharacter from './components/AddCharacter/AddCharacter';\r\nimport Settings from './components/Settings/Settings';\r\nimport EditCharacter from './components/EditCharacter/EditCharacter';\r\nimport { useStateValue, ContextWrapper } from './state-manager/context';\r\n\r\nimport './App.css';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst App = () => {\r\n    const [{ selected }] = useStateValue();\r\n    const [activeTab, setTab] = useState(\"2\");\r\n\r\n    useEffect(() => {\r\n        if(!selected){\r\n            setTab(\"2\");\r\n        }\r\n    }, [selected]);\r\n\r\n    return (\r\n        <Row style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Col span={activeTab === \"2\" ? 8 : 14} >\r\n                <ListCharacters wider={activeTab === \"1\"} />\r\n            </Col>\r\n            <Col span={activeTab === \"2\" ? 16 : 10} >\r\n                <Tabs style={{padding: 8}}  onChange={setTab} activeKey={activeTab}>\r\n                    <TabPane tab=\"Add Character\" key=\"2\">\r\n                        <AddCharacter />\r\n                    </TabPane>\r\n                    <TabPane disabled={!selected} tab=\"Edit Character\" key=\"1\">\r\n                        <EditCharacter />\r\n                    </TabPane>\r\n                    <TabPane tab={<> <SettingOutlined /> Settings</>} key=\"3\">\r\n                        <Settings />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst AppWrapped = () => (\r\n    <ContextWrapper>\r\n        <App />\r\n    </ContextWrapper>\r\n);\r\n\r\n\r\nexport default AppWrapped;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}