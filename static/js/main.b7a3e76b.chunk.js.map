{"version":3,"sources":["state-manager/actions.js","state-manager/reducer.js","state-manager/context.js","components/CharactersList/index.js","components/Initiative/index.js","components/HitPoints/index.js","components/Name/index.js","components/AddCharacter/index.js","components/Settings/index.js","components/HitPointsConditionsManager/index.js","App.js","index.js"],"names":["ADD_INITIATIVE","DELETE_ALL","LOAD_STATE","SET_INITIATIVES","REMOVE_CHARACTER","WRITE_INPUT_INITIATIVE","WRITE_INPUT_NAME","WRITE_INPUT_HP","DELETE_INPUT_INITIATIVE","DELETE_INPUT_NAME","DELETE_INPUT_HP","NEGATIVE_INPUT_INITIATIVE","NEXT","BACK","SELECT","EDIT_HP","EDIT_CONDITION","REMOVE_CONDITION","STORED_STATE","initialState","initiatives","selected","inputInitiative","inputName","inputHitpoints","reducer","state","action","type","character","value","name","hitpoints","id","Date","now","monster","conditions","sort","a","b","filter","parseInt","slice","concat","find","map","ini","copy","cloneDeep","push","cond","condition","Error","init","string_state","localStorage","getItem","JSON","parse","error","console","StateContext","createContext","ContextWrapper","children","store","useReducer","useEffect","isEqual","setItem","stringify","Provider","useStateValue","useContext","confirm","Modal","DragHandle","sortableHandle","MenuOutlined","style","width","cursor","color","SortableItem","sortableElement","props","SortableContainer","sortableContainer","CharacterList","wider","dispatch","columns","useMemo","fields","dataIndex","className","render","title","fontWeight","key","tags","display","flexDirection","DeleteOutlined","onClick","icon","onOk","onSortEnd","oldIndex","newIndex","newInitiatives","arrayMove","el","height","overflowX","justifyContent","borderRight","overflow","pagination","dataSource","rowKey","rowSelection","onChange","components","body","wrapper","useDragHandle","helperClass","row","restProps","index","findIndex","x","span","size","maxWidth","disabled","length","buttons","Icon","LineOutlined","Keyboard","danger","minWidth","Initiative","gutter","justify","margin","precision","HitPoints","buttonLetters","extraWords","Name","queryString","window","location","search","urlParams","URLSearchParams","players_param","get","players","split","ply","Step","Steps","steps","AddCharacter","useState","current","setCurrent","item","RollbackOutlined","saveState","states","getStates","states_str","Settings","stateSelected","setstateSelected","setName","setStates","placeholder","target","stateToBeSaved","setTimeout","SaveOutlined","toDateString","newStates","buttonsHitpoints","buttonsConditions","add","remove","KeyboardConditions","hasIt","KeyboardHitpoints","isNegative","HitPointsConditionsManager","checked","TabPane","Tabs","App","activeTab","setTab","CharactersList","padding","activeKey","tab","SettingOutlined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b7a3e76b.chunk.js","sourcesContent":["export const ADD_INITIATIVE = \"ADD_INITIATIVE\";\r\nexport const DELETE_ALL = \"DELETE_ALL\";\r\nexport const LOAD_STATE = \"LOAD_STATE\";\r\nexport const SET_INITIATIVES = \"SET_INITIATIVES\";\r\nexport const REMOVE_CHARACTER = \"REMOVE_CHARACTER\";\r\nexport const WRITE_INPUT_INITIATIVE = \"WRITE_INPUT_INITIATIVE\";\r\nexport const WRITE_INPUT_NAME = \"WRITE_INPUT_NAME\";\r\nexport const WRITE_INPUT_HP = \"WRITE_INPUT_HP\";\r\nexport const DELETE_INPUT_INITIATIVE = \"DELETE_INPUT_INITIATIVE\";\r\nexport const DELETE_INPUT_NAME = \"DELETE_INPUT_NAME\";\r\nexport const DELETE_INPUT_HP = \"DELETE_INPUT_HP\";\r\nexport const NEGATIVE_INPUT_INITIATIVE = \"NEGATIVE_INPUT_INITIATIVE\";\r\nexport const NEXT = \"NEXT\";\r\nexport const BACK = \"BACK\";\r\nexport const SELECT = \"SELECT\";\r\nexport const EDIT_HP = \"EDIT_HP\";\r\nexport const EDIT_CONDITION = \"EDIT_CONDITION\";\r\nexport const REMOVE_CONDITION = \"REMOVE_CONDITION\";\r\nexport const CLEAN = \"CLEAN\";\r\n","import cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport {\r\n    ADD_INITIATIVE,\r\n    DELETE_ALL,\r\n    LOAD_STATE,\r\n    SET_INITIATIVES,\r\n    REMOVE_CHARACTER,\r\n    WRITE_INPUT_INITIATIVE,\r\n    WRITE_INPUT_NAME,\r\n    WRITE_INPUT_HP,\r\n    DELETE_INPUT_INITIATIVE,\r\n    DELETE_INPUT_NAME,\r\n    DELETE_INPUT_HP,\r\n    NEGATIVE_INPUT_INITIATIVE,\r\n    NEXT,\r\n    BACK,\r\n    SELECT,\r\n    EDIT_HP,\r\n    EDIT_CONDITION,\r\n    REMOVE_CONDITION,\r\n    CLEAN\r\n} from './actions';\r\n\r\nexport const STORED_STATE = \"storedState\";\r\n\r\nexport const initialState = {\r\n    initiatives: [],\r\n    selected: null,\r\n    inputInitiative: 0,\r\n    inputName: '',\r\n    inputHitpoints: 0\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_INITIATIVE: {\r\n            const character = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName ?? '',\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster,\r\n                conditions: []\r\n            };\r\n            const initiatives = [...state.initiatives, character].sort((a, b) => b.value - a.value);\r\n            return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case DELETE_ALL: {\r\n            return initialState;\r\n        }\r\n        case LOAD_STATE: {\r\n            return action.value;\r\n        }\r\n        case SET_INITIATIVES: {\r\n            return { ...state, initiatives: action.initiatives };\r\n        }\r\n        case REMOVE_CHARACTER: {\r\n            const initiatives = state.initiatives.filter(({ id }) => id !== action.value);\r\n            return { ...state, initiatives, selected: state.selected === action.value ? null : state.selected };\r\n        }\r\n        case WRITE_INPUT_INITIATIVE: {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case WRITE_INPUT_NAME: {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case WRITE_INPUT_HP: {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case DELETE_INPUT_INITIATIVE: {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case DELETE_INPUT_HP: {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case DELETE_INPUT_NAME: {\r\n            return { ...state, inputName: state?.inputName?.slice(0, -1) ?? '' };\r\n        }\r\n        case NEGATIVE_INPUT_INITIATIVE: {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case NEXT: {\r\n            return {\r\n                ...state,\r\n                initiatives: state.initiatives.slice(1).concat(state.initiatives.slice(0, 1))\r\n            };\r\n        }\r\n        case BACK: {\r\n            return {\r\n                ...state,\r\n                initiatives: state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1))\r\n            };\r\n        }\r\n        case SELECT: {\r\n            const character = state.initiatives.find(({ id }) => id === action.value);\r\n            return {\r\n                ...state,\r\n                selected: character.id,\r\n                inputInitiative: character?.value,\r\n                inputName: character?.name,\r\n                inputHitpoints: character?.hitpoints\r\n            };\r\n        }\r\n        case EDIT_HP: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.hitpoints = copy.hitpoints + action.value;\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case EDIT_CONDITION: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions.push(action.value);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case REMOVE_CONDITION: {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions = copy.conditions.filter(cond => cond.condition !== action.value.condition);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case CLEAN: {\r\n            return { ...state, inputInitiative: 0, inputName: '', inputHitpoints: 0, selected: null };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nexport const init = () => {\r\n    let state = initialState;\r\n    try {\r\n        const string_state = localStorage.getItem(STORED_STATE);\r\n        state = string_state ? JSON.parse(string_state) : initialState;\r\n        state.selected = null;\r\n    } catch (error) {\r\n        console.error(\"Error on init reducer\", error);\r\n    }\r\n    return state;\r\n};","import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { reducer, initialState, init, STORED_STATE } from './reducer';\r\n\r\nexport const StateContext = createContext();\r\n\r\n\r\nexport const ContextWrapper = ({ children }) => {\r\n    const store = useReducer(reducer, initialState, init);\r\n\r\n    useEffect(() => {\r\n        // Persist state on local storage.\r\n        const [ state ] = store;\r\n        if(!isEqual(state, initialState)){\r\n            localStorage.setItem(STORED_STATE, JSON.stringify(state));\r\n        }\r\n    }, [store]);\r\n\r\n    return (\r\n        <StateContext.Provider value={store}>\r\n            { children }\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useMemo} from 'react';\r\nimport { Table, Tag, Modal, Row, Col, Button } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\r\nimport { DeleteOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { BACK, NEXT, REMOVE_CHARACTER, SELECT, SET_INITIATIVES } from '../../state-manager/actions';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ width: '15px' ,cursor: 'pointer', color: '#999' }} />\r\n));\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\nconst CharacterList = ({ wider }) => {\r\n    const [{ initiatives }, dispatch] = useStateValue();\r\n\r\n    const columns = useMemo(() => {\r\n        const fields = [\r\n            {\r\n                dataIndex: 'sort',\r\n                width: 15,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                width: '50px',\r\n                className: 'drag-visible',\r\n                render: ({name, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: monster ? 'red' : 'green'  }}>{name}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Init',\r\n                key: 'value',\r\n                dataIndex: 'value',\r\n            }\r\n        ];\r\n\r\n        if(wider){\r\n            fields.push({\r\n                title: 'HP',\r\n                render: ({hitpoints, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: hitpoints > 0 || !monster ? 'green' : 'red'}}>{hitpoints}</span>\r\n                )\r\n            });\r\n            fields.push({\r\n                title: 'Conditions',\r\n                dataIndex: 'conditions',\r\n                key: 'conditions',\r\n                render: tags => (\r\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n                      {tags.map( ({color, condition}) => (\r\n                          <Tag color={color} key={condition}>\r\n                            {condition}\r\n                          </Tag>\r\n                        ))}\r\n                    </div>\r\n                  ),\r\n            });\r\n            fields.push({\r\n                key: 'id',\r\n                render: ({id, name}) => (\r\n                  <DeleteOutlined onClick={() => {\r\n                    confirm({\r\n                        title: `Do you Want to delete ${name ?? ''}?`,\r\n                        icon: null,\r\n                        onOk() {\r\n                            dispatch({ type: REMOVE_CHARACTER, value: id});\r\n                        },\r\n                      });\r\n                    }} />\r\n                ),\r\n              });\r\n        }\r\n        return fields;\r\n    }, [wider, dispatch]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newInitiatives = arrayMove([].concat(initiatives), oldIndex, newIndex).filter(el => !!el);\r\n            dispatch({ type: SET_INITIATIVES, initiatives: newInitiatives });\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = initiatives.findIndex(x => x.id === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div style={{ \r\n                height: '100vh',\r\n                overflowX: 'hidden',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                borderRight: 'solid 2px lightgrey'\r\n            }} >\r\n            <Table\r\n                style={{ height: 'calc(100vh - 35px)', overflow: 'scroll', overflowX: 'hidden' }}\r\n                pagination={false}\r\n                dataSource={initiatives}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                    type: 'radio',\r\n                    onChange: ([id]) => dispatch({ type: SELECT, value: id }),\r\n                }}\r\n                components={{\r\n                    body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n            <Row style={{ height: '40px' }} >\r\n                <Col span={12}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: BACK })} >\r\n                        Go Back\r\n                     </Button>\r\n                </Col>\r\n                <Col span={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: NEXT })} >\r\n                        Next Character\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport { LineOutlined } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { NEGATIVE_INPUT_INITIATIVE, WRITE_INPUT_INITIATIVE } from '../../state-manager/actions';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"2\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"3\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"4\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"5\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"6\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"7\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"8\", type: WRITE_INPUT_INITIATIVE },\r\n    { value: \"9\", type: WRITE_INPUT_INITIATIVE },\r\n    { Icon: LineOutlined, type: NEGATIVE_INPUT_INITIATIVE },\r\n    { value: \"0\", type: WRITE_INPUT_INITIATIVE },\r\n];\r\n\r\n\r\nfunction Keyboard() {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttons.map(({ type, value, Icon, danger }) => {\r\n                return (\r\n                    <Col span={8} key={type + value}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function Initiative() {\r\n    const [{ inputInitiative }] = useStateValue();\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin: 10 }}\r\n                        value={\"Initiative: \" + inputInitiative}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard />\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { WRITE_INPUT_HP } from '../../state-manager/actions';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: WRITE_INPUT_HP },\r\n    { value: \"2\", type: WRITE_INPUT_HP },\r\n    { value: \"3\", type: WRITE_INPUT_HP },\r\n    { value: \"4\", type: WRITE_INPUT_HP },\r\n    { value: \"5\", type: WRITE_INPUT_HP },\r\n    { value: \"6\", type: WRITE_INPUT_HP },\r\n    { value: \"7\", type: WRITE_INPUT_HP },\r\n    { value: \"8\", type: WRITE_INPUT_HP },\r\n    { value: \"9\", type: WRITE_INPUT_HP },\r\n    {},\r\n    { value: \"0\", type: WRITE_INPUT_HP },\r\n];\r\n\r\n\r\nfunction Keyboard() {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttons.map(({ type, value, Icon, danger }) => {\r\n                if (!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function HitPoints() {\r\n    const [{ inputHitpoints }] = useStateValue();\r\n    return <>\r\n        <Row gutter={[16, 16]} justify=\"center\">\r\n            <Col span={8} >\r\n                <Statistic\r\n                    style={{ margin: 10 }}\r\n                    value={\"HP: \" + inputHitpoints}\r\n                    precision={0}\r\n                />\r\n            </Col>\r\n        </Row>\r\n        <Row gutter={[8, 8]}>\r\n            <Keyboard />\r\n        </Row>\r\n    </>\r\n}\r\n","import { useStateValue } from '../../state-manager/context';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nimport { WRITE_INPUT_NAME } from '../../state-manager/actions';\r\n\r\nconst buttonLetters = [\r\n    { value: \"q\", type: WRITE_INPUT_NAME },\r\n    { value: \"w\", type: WRITE_INPUT_NAME },\r\n    { value: \"e\", type: WRITE_INPUT_NAME },\r\n    { value: \"r\", type: WRITE_INPUT_NAME },\r\n    { value: \"t\", type: WRITE_INPUT_NAME },\r\n    { value: \"y\", type: WRITE_INPUT_NAME },\r\n    { value: \"u\", type: WRITE_INPUT_NAME },\r\n    { value: \"i\", type: WRITE_INPUT_NAME },\r\n    { value: \"o\", type: WRITE_INPUT_NAME },\r\n    { value: \"p\", type: WRITE_INPUT_NAME },\r\n    { value: \"a\", type: WRITE_INPUT_NAME },\r\n    { value: \"s\", type: WRITE_INPUT_NAME },\r\n    { value: \"d\", type: WRITE_INPUT_NAME },\r\n    { value: \"f\", type: WRITE_INPUT_NAME },\r\n    { value: \"g\", type: WRITE_INPUT_NAME },\r\n    { value: \"h\", type: WRITE_INPUT_NAME },\r\n    { value: \"j\", type: WRITE_INPUT_NAME },\r\n    { value: \"k\", type: WRITE_INPUT_NAME },\r\n    { value: \"l\", type: WRITE_INPUT_NAME },\r\n    { value: \"ñ\", type: WRITE_INPUT_NAME },\r\n    { value: \"z\", type: WRITE_INPUT_NAME },\r\n    { value: \"x\", type: WRITE_INPUT_NAME },\r\n    { value: \"c\", type: WRITE_INPUT_NAME },\r\n    { value: \"v\", type: WRITE_INPUT_NAME },\r\n    { value: \"b\", type: WRITE_INPUT_NAME },\r\n    { value: \"n\", type: WRITE_INPUT_NAME },\r\n    { value: \"m\", type: WRITE_INPUT_NAME },\r\n    { value: \"_\", type: WRITE_INPUT_NAME },\r\n    { value: \"??\", type: WRITE_INPUT_NAME },\r\n    { value: \"1\", type: WRITE_INPUT_NAME },\r\n    { value: \"2\", type: WRITE_INPUT_NAME },\r\n    { value: \"3\", type: WRITE_INPUT_NAME },\r\n    { value: \"4\", type: WRITE_INPUT_NAME },\r\n    { value: \"5\", type: WRITE_INPUT_NAME },\r\n    { value: \"6\", type: WRITE_INPUT_NAME },\r\n    { value: \"7\", type: WRITE_INPUT_NAME },\r\n    { value: \"8\", type: WRITE_INPUT_NAME },\r\n    { value: \"9\", type: WRITE_INPUT_NAME },\r\n    { value: \"0\", type: WRITE_INPUT_NAME },\r\n];\r\n\r\nfunction Keyboard({ extraWords }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonLetters.concat(extraWords).map(({ type, value, Icon }) => {\r\n                return (\r\n                    <Col key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Name = () => {\r\n    const [{ inputName }] = useStateValue();\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const players_param = urlParams.get('players') ? urlParams.get('players') : null;\r\n    const players = players_param?.split(\"-\")?.map(ply => ({ value: ply, type: WRITE_INPUT_NAME })) ?? [];\r\n\r\n    return <>\r\n        <Row gutter={[16, 16]} justify=\"center\">\r\n            <Col>\r\n                <Statistic\r\n                    style={{ margin: 10 }}\r\n                    value={\"Name: \" + inputName}\r\n                />\r\n            </Col>\r\n        </Row>\r\n        <Row gutter={[8, 8]}>\r\n            <Keyboard extraWords={players} />\r\n        </Row>\r\n    </>\r\n};\r\n\r\nexport default Name;\r\n","import React, {useState} from 'react';\r\n\r\nimport { Button, Steps } from 'antd';\r\n\r\nimport { DeleteOutlined, RollbackOutlined } from '@ant-design/icons';\r\n\r\nimport Initiative from '../Initiative';\r\nimport HitPoints from '../HitPoints';\r\nimport Name from '../Name';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { ADD_INITIATIVE, DELETE_INPUT_HP, DELETE_INPUT_INITIATIVE, DELETE_INPUT_NAME } from '../../state-manager/actions';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\nexport default function AddCharacter() {\r\n    const [, dispatch] = useStateValue();\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <>\r\n           <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        {\r\n                            current === 1 && <Initiative />\r\n                        }\r\n                        {\r\n                            current === 0 && <Name />\r\n                        }\r\n                        {\r\n                            current === 2 && <HitPoints />\r\n                        }\r\n                        <div className=\"steps-action\">\r\n                            {\r\n                                current === 0 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_NAME })} >\r\n                                    <RollbackOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 1 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_INITIATIVE })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 2 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: DELETE_INPUT_HP })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n\r\n                            {current > 0 && (\r\n                                <Button onClick={() => setCurrent(current - 1)}>\r\n                                    Previous\r\n                                </Button>\r\n                            )}\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" danger onClick={() => { setCurrent(0); dispatch({ type: ADD_INITIATIVE, monster: true }) }}>\r\n                                    Create as a Monster\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => { setCurrent(0); dispatch({ type: ADD_INITIATIVE, monster: false }) }}>\r\n                                    Create as a Player\r\n                                </Button>\r\n                            )}\r\n                        </div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Modal, Input, Table } from 'antd';\r\nimport { DeleteOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { DELETE_ALL, LOAD_STATE } from '../../state-manager/actions';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst saveState = (states) => {\r\n    localStorage.setItem(\"states\", JSON.stringify(states))\r\n}\r\n\r\nconst getStates = () => {\r\n    let states = []\r\n    try {\r\n        const states_str = localStorage.getItem(\"states\");\r\n        states = states_str ? JSON.parse(states_str) : [];\r\n    } catch (error) {\r\n        console.error(\"Error on getStates from settings\", error);\r\n    }\r\n    return states;\r\n}\r\n\r\nexport default function Settings() {\r\n    const [ state, dispatch ] = useStateValue();\r\n    const [stateSelected, setstateSelected] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [states, setStates] = useState(getStates());\r\n\r\n    return (<>\r\n        <Row gutter={[8, 8]}>\r\n            <Col>\r\n                <Button\r\n                    size=\"large\"\r\n                    danger\r\n                    type=\"primary\" onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to delete everything in the store?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: DELETE_ALL });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <DeleteOutlined /> Delete Store\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Row gutter={[8, 8]}>\r\n            <Col span={14}>\r\n                <Input size=\"large\" placeholder=\"name\" value={name} onChange={ ({target: {value}}) => setName(value)} />\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!name}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to save the actual character set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                const stateToBeSaved = {\r\n                                    name,\r\n                                    id: Date.now(),\r\n                                    state\r\n                                }\r\n                                states.push(stateToBeSaved);\r\n                                setName(null);\r\n                                saveState(states);\r\n                                setTimeout(() => setStates(getStates()), 0);\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <SaveOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!stateSelected}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to activate this fight set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: LOAD_STATE, value: stateSelected });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    Activate\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Table\r\n            style={{ overflow: 'scroll', overflowX: 'hidden' }}\r\n            pagination={false}\r\n            dataSource={states} // states stored in localstorage\r\n            columns={[\r\n                {\r\n                    title: 'Creation Date',\r\n                    key: 'id',\r\n                    dataIndex: 'id',\r\n                    render: id => <span>{(new Date(id)).toDateString()}</span>\r\n                },\r\n                {\r\n                    title: 'Fight',\r\n                    key: 'name',\r\n                    dataIndex: 'name',\r\n                },\r\n                {\r\n                    render: ({ id, name }) => (\r\n                        <DeleteOutlined onClick={() => {\r\n                            confirm({\r\n                                title: `Do you Want to delete ${name ?? ''}?`,\r\n                                icon: null,\r\n                                onOk() {\r\n                                    const newStates = states?.filter( state => id !== state.id);\r\n                                    saveState(newStates);\r\n                                    setTimeout(() => setStates(getStates()), 0);\r\n                                },\r\n                            });\r\n                        }} />\r\n                    )\r\n                }\r\n            ]}\r\n            rowKey=\"state\"\r\n            rowSelection={{\r\n                type: 'radio',\r\n                onChange: ([state]) => setstateSelected(state),\r\n            }}\r\n        />\r\n    </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Checkbox, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport { useStateValue } from '../../state-manager/context';\r\nimport { EDIT_CONDITION, EDIT_HP, REMOVE_CONDITION } from '../../state-manager/actions';\r\n\r\nconst buttonsHitpoints = [\r\n    { value: 1, type: EDIT_HP },\r\n    { value: 2, type: EDIT_HP },\r\n    { value: 3, type: EDIT_HP },\r\n    { value: 5, type: EDIT_HP },\r\n    { value: 10, type: EDIT_HP },\r\n    { value: 20, type: EDIT_HP },\r\n    { value: 30, type: EDIT_HP },\r\n    { value: 50, type: EDIT_HP }\r\n];\r\n\r\nconst buttonsConditions = [\r\n    { color: \"grey\", condition: \"Petrified\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"lime\", condition: \"Incapacitated\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"gold\", condition: \"Unconscious\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"orange\", condition: \"Paralyzed\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"cornflowerblue\", condition: \"Invisible\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"cyan\", condition: \"Deafened\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"geekblue\", condition: \"Blinded\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"blue\", condition: \"Frightened\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"purple\", condition: \"Grappled\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"burlywood\", condition: \"Restrained\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"magenta\", condition: \"Charmed\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"green\", condition: \"Poisoned\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"red\", condition: \"Stunned\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n    { color: \"volcano\", condition: \"Prone\", add: EDIT_CONDITION, remove: REMOVE_CONDITION },\r\n];\r\n\r\nfunction KeyboardConditions({ conditions }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonsConditions.map(({ add, remove, condition, color }) => {\r\n                const hasIt = conditions?.find(cond => cond.condition === condition);\r\n                return (\r\n                    <Col span={6} key={condition}>\r\n                        <Tag\r\n                            key={condition}\r\n                            color={'cornflowerblue'}\r\n                            onClick={() => dispatch({ type: hasIt ? remove : add, value: { condition, color } })}\r\n                        >\r\n                            {hasIt && <DeleteOutlined />} {condition}\r\n                        </Tag>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction KeyboardHitpoints({ isNegative }) {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <>\r\n            {buttonsHitpoints.map(({ type, value, Icon }) => {\r\n                if (!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value : value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function HitPointsConditionsManager() {\r\n    const [{ initiatives, selected }] = useStateValue();\r\n    const [checked, onChange] = useState(true);\r\n    const { conditions, name } = initiatives?.find(ini => ini.id === selected) ?? {};\r\n\r\n    return (\r\n        <>\r\n            <div className=\"LabelName\"><span className=\"Name\">{name}</span></div>\r\n            <div className=\"LabelName\">Hit Points:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <Col span={8} ><Checkbox checked={checked} onChange={({ target: { checked: value } }) => onChange(value)}>Minus</Checkbox></Col>\r\n                        <KeyboardHitpoints isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"LabelName\">Conditions:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <KeyboardConditions conditions={conditions} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Tabs } from 'antd';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nimport CharactersList from './components/CharactersList';\r\nimport AddCharacter from './components/AddCharacter';\r\nimport Settings from './components/Settings';\r\nimport HitPointsConditionsManager from './components/HitPointsConditionsManager';\r\n\r\nimport { useStateValue } from './state-manager/context';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function App() {\r\n    const [{ selected }] = useStateValue();\r\n    const [activeTab, setTab] = useState(\"2\");\r\n\r\n    useEffect(() => {\r\n        if(!selected){\r\n            setTab(\"2\");\r\n        }\r\n    }, [selected]);\r\n\r\n    return (\r\n        <Row style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Col span={activeTab === \"2\" ? 8 : 14} >\r\n                <CharactersList wider={activeTab === \"1\"} />\r\n            </Col>\r\n            <Col span={activeTab === \"2\" ? 16 : 10} >\r\n                <Tabs style={{padding: 8}}  onChange={setTab} activeKey={activeTab}>\r\n                    <TabPane tab=\"Add Character\" key=\"2\">\r\n                        <AddCharacter />\r\n                    </TabPane>\r\n                    <TabPane disabled={!selected} tab=\"Character Manager\" key=\"1\">\r\n                        <HitPointsConditionsManager />\r\n                    </TabPane>\r\n                    <TabPane tab={<> <SettingOutlined /> Settings</>} key=\"3\">\r\n                        <Settings />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { ContextWrapper } from './state-manager/context';\r\n\r\nimport App from './App';\r\nimport './App.css';\r\n\r\n\r\nReactDOM.render((\r\n    <ContextWrapper>\r\n        <App />\r\n    </ContextWrapper>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}